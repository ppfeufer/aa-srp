function isObject(e){return e&&"object"==typeof e&&!Array.isArray(e)&&!(e instanceof Date)}function deepMerge(o,...e){return e.length&&e.forEach(e=>{if(isObject(o)&&isObject(e))for(var t in e)isObject(e[t])?"__proto__"!==t&&"constructor"!==t&&"prototype"!==t&&(o[t]&&isObject(o[t])||(o[t]={}),deepMerge(o[t],e[t])):o[t]=e[t]}),o}let aaSrpSettings=aaSrpJsSettingsDefaults;"undefined"!=typeof aaSrpJsSettingsOverride&&(aaSrpSettings=deepMerge(aaSrpJsSettingsDefaults,aaSrpJsSettingsOverride));const _fetchAjaxData=async({url:e,method:t="get",csrfToken:o=null,payload:r=null,responseIsJson:s=!0})=>{const n=t.toLowerCase();if(!["get","post"].includes(n))throw new Error(`Invalid method: ${t}. Valid methods are: get, post`);const a={};s&&(a.Accept="application/json",a["Content-Type"]="application/json");let i=e,c=null;if("post"===n){if(!o)throw new Error("CSRF token is required for POST requests");if(a["X-CSRFToken"]=o,null!==r&&!isObject(r))throw new Error("Payload must be an object when using POST method");c=r?JSON.stringify(r):null}else if("get"===n&&r){const l=new URLSearchParams(r).toString();i+=(e.includes("?")?"&":"?")+l}try{const p=await fetch(i,{method:t.toUpperCase(),headers:a,body:c});if(p.ok)return s?await p.json():await p.text();throw new Error(`HTTP error! status: ${p.status}`)}catch(e){throw console.log(`Error: ${e.message}`),e}},fetchGet=({url:e,payload:t=null,responseIsJson:o=!0})=>_fetchAjaxData({url:e,method:"get",payload:t,responseIsJson:o}),fetchPost=({url:e,csrfToken:t,payload:o=null,responseIsJson:r=!0})=>_fetchAjaxData({url:e,method:"post",csrfToken:t,payload:o,responseIsJson:r});
//# sourceMappingURL=aa-srp.min.js.map