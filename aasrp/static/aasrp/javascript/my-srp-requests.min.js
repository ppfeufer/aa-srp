$(document).ready(()=>{'use strict';const t=$('#table_tab-user-srp-requests');let e=0;fetchGet({url:aaSrpSettings.url.userSrpRequests}).then(a=>{a&&t.DataTable({language:aaSrpSettings.dataTable.language,data:a,columns:[{data:'request_time',render:{display:t=>null===t?'':moment(t).utc().format(aaSrpSettings.datetimeFormat),sort:t=>null===t?'':t},className:'srp-request-time'},{data:'character_html',render:{display:'display',filter:'sort',sort:'sort'},className:'srp-request-character'},{data:'fleet_name_html',render:{display:'display',filter:'sort',sort:'sort'},className:'srp-request-fleet-details'},{data:'ship_html',render:{display:'display',filter:'sort',sort:'sort'},className:'srp-request-ship'},{data:'zkb_loss_amount',render:{display:t=>numberFormatter({value:t,locales:aaSrpSettings.locale,options:{style:'currency',currency:'ISK'}}),filter:t=>t,sort:t=>t},className:'srp-request-zkb-loss-amount text-end'},{data:'payout_amount',render:{display:t=>numberFormatter({value:t,locales:aaSrpSettings.locale,options:{style:'currency',currency:'ISK'}}),filter:t=>t,sort:t=>t},className:'srp-request-payout text-end'},{data:'request_status_icon',className:'srp-request-status text-end'},{data:'request_status'},{data:'ship'},{data:'character'}],columnDefs:[{orderable:!1,targets:[6]},{visible:!1,targets:[7,8,9]}],order:[[0,'desc']],filterDropDown:{columns:[{idx:9,title:aaSrpSettings.translation.filter.character},{idx:8,title:aaSrpSettings.translation.filter.ship},{idx:7,title:aaSrpSettings.translation.filter.requestStatus}],autoSize:!1,bootstrap:!0,bootstrap_version:5},createdRow:(t,a,r)=>{$(t).attr('data-row-id',r),$(t).attr('data-srp-request-code',a.request_code),e+=parseInt(a.payout_amount),$('.srp-dashboard-user-isk-cost-amount').html(numberFormatter({value:e,locales:aaSrpSettings.locale,options:{style:'currency',currency:'ISK'}}))},initComplete:()=>{aasrpBootstrapTooltip({selector:'#table_tab-user-srp-requests'})}})}).catch(t=>{console.error('Error fetching SRP request data:',t)});const a=$('#srp-request-details');a.on('show.bs.modal',t=>{const e=$(t.relatedTarget).data('link');fetchGet({url:e,responseIsJson:!1}).then(t=>{a.find('.modal-body').html(t)}).catch(t=>{console.log(`Error: ${t.message}`)})}).on('hide.bs.modal',()=>{a.find('.modal-body').text('')})});
//# sourceMappingURL=my-srp-requests.min.js.map